{"ast":null,"code":"var board = [[0, 2, 0, 0], [0, 0, 0, 0], [0, 0, 2, 0], [0, 0, 0, 0]];\nconst boardState = document.querySelector(\"[data-game-grid]\");\nvar hasLost = false;\n\nfunction startInteraction() {\n  document.addEventListener(\"keydown\", handleKeyPress);\n  document.addEventListener(\"click\", handleMouseClick);\n}\n\nstartInteraction();\nrepresentGameboard(board);\n\nfunction handleMouseClick(e) {\n  if (e.target.matches(\"[data-new-game]\")) {\n    board = [[0, 2, 0, 0], [0, 0, 0, 0], [0, 0, 2, 0], [0, 0, 0, 0]];\n    representGameboard(board);\n    document.querySelector(\"[data-score]\").innerHTML = \"0\";\n  }\n}\n\nfunction representGameboard(board) {\n  const tileArray = boardState.querySelectorAll(\".tile\");\n\n  for (let i = 0; i < board.length; i++) {\n    for (j = 0; j < board.length; j++) {\n      const tile = tileArray[i * 4 + j];\n      tile.innerHTML = board[i][j];\n      tile.setAttribute(\"data-state\", board[i][j].toString());\n    }\n  }\n}\n\nfunction handleKeyPress(e) {\n  if (e.key == \"q\") {\n    document.getElementById(\"comment\").hidden = !document.getElementById(\"comment\").hidden;\n  }\n\n  if (e.key == \"e\") {\n    console.log(board);\n  }\n\n  if (e.keyCode == '37') {\n    //left\n    rowSlide(board); // integrate this for loop into rowMerge\n\n    for (let i = 0; i < board.length; i++) {\n      board[i] = rowMerge(board[i]);\n    }\n\n    rowSlide(board);\n    newTile(board);\n    representGameboard(board);\n  }\n\n  if (e.keyCode == '39') {\n    //right\n    rowSlide(board, \"r\"); // integrate this for loop into rowMerge\n\n    for (let i = 0; i < board.length; i++) {\n      board[i] = rowMerge(board[i].reverse()).reverse();\n    }\n\n    rowSlide(board, \"r\");\n    newTile(board);\n    representGameboard(board);\n  }\n\n  if (e.keyCode == '38') {\n    //up\n    columnSlide(board);\n    columnMergeUp(board);\n    columnSlide(board);\n    newTile(board);\n    representGameboard(board);\n  }\n\n  if (e.keyCode == '40') {\n    //down\n    columnSlide(board, \"d\");\n    columnMergeDown(board);\n    columnSlide(board, \"d\");\n    newTile(board);\n    representGameboard(board);\n  }\n\n  if (e.key == \"r\") {\n    newTile(board);\n  }\n}\n\nfunction slide(arr) {\n  var zeroes = 0;\n  const slid = [];\n  var returnArr = [0, 0, 0, 0];\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === 0) {\n      zeroes += 1;\n    }\n\n    slid.push(zeroes);\n  }\n\n  for (let j = 0; j < arr.length; j++) {\n    if (arr[j] !== 0) {\n      returnArr[j - slid[j]] = arr[j];\n    }\n  }\n\n  return returnArr;\n}\n\nfunction rowSlide(grid) {\n  let dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"l\";\n\n  for (let i = 0; i < grid.length; i++) {\n    if (dir == \"r\") {\n      grid[i] = slide(grid[i].reverse()).reverse();\n    } else {\n      grid[i] = slide(grid[i]);\n    }\n  }\n}\n\nfunction columnSlide(grid) {\n  let dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"u\";\n  var tempColumn = [0, 0, 0, 0];\n\n  for (let i = 0; i < grid.length; i++) {\n    for (let j = 0; j < grid[i].length; j++) {\n      tempColumn[j] = grid[j][i];\n    }\n\n    if (dir == \"d\") {\n      tempColumn = slide(tempColumn.reverse()).reverse();\n    } else {\n      tempColumn = slide(tempColumn);\n    }\n\n    for (let k = 0; k < grid[i].length; k++) {\n      grid[k][i] = tempColumn[k];\n    }\n\n    tempColumn = [0, 0, 0, 0];\n  }\n}\n\nfunction rowMerge(arr) {\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] == arr[i + 1] && !arr[i] == 0) {\n      arr[i] = arr[i] * 2;\n      arr[i + 1] = 0;\n      document.querySelector(\"[data-score]\").innerHTML = (parseInt(document.querySelector(\"[data-score]\").innerHTML) + arr[i] * 4).toString();\n    }\n  }\n\n  return arr;\n}\n\nfunction columnMergeUp(grid) {\n  for (let j = 0; j < grid[0].length; j++) {\n    for (let i = 0; i < grid.length - 1; i++) {\n      if (grid[i][j] == grid[i + 1][j] && !grid[i][j] == 0) {\n        grid[i][j] = grid[i][j] * 2;\n        grid[i + 1][j] = 0;\n        document.querySelector(\"[data-score]\").innerHTML = (parseInt(document.querySelector(\"[data-score]\").innerHTML) + grid[i][j] * 4).toString();\n      }\n    }\n  }\n\n  return grid;\n}\n\nfunction columnMergeDown(grid) {\n  for (let j = 0; j < grid[0].length; j++) {\n    for (let i = grid.length - 1; i > 0; i--) {\n      if (grid[i][j] == grid[i - 1][j] && !grid[i][j] == 0) {\n        grid[i][j] = grid[i][j] * 2;\n        grid[i - 1][j] = 0;\n        document.querySelector(\"[data-score]\").innerHTML = (parseInt(document.querySelector(\"[data-score]\").innerHTML) + grid[i][j] * 4).toString();\n      }\n    }\n  }\n\n  return grid;\n}\n\nfunction showAlert(text) {\n  let duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n  const alertContainer = document.querySelector(\"[data-alert-container]\");\n  const alert = document.createElement(\"div\");\n  alert.textContent = text;\n  alert.classList.add(\"alert\");\n  alertContainer.prepend(alert);\n  if (duration == null) return;\n  setTimeout(() => {\n    alert.classList.add(\"hide\");\n    alert.addEventListener(\"transitionend\", () => {\n      alert.remove();\n    });\n  }, duration);\n}\n\nfunction newTile(grid) {\n  const empties = [];\n\n  for (var i = 0; i < grid.length; i++) {\n    for (var j = 0; j < grid[i].length; j++) {\n      if (grid[i][j] == 0) {\n        empties.push([i, j]);\n      }\n    }\n  }\n\n  console.log(empties);\n\n  if (empties.length != 0) {\n    const randomEmptyCoord = empties[Math.floor(Math.random() * empties.length)];\n    grid[randomEmptyCoord[0]][randomEmptyCoord[1]] = Math.floor(Math.random() * 2 + 1) * 2;\n  }\n}","map":{"version":3,"names":["board","boardState","document","querySelector","hasLost","startInteraction","addEventListener","handleKeyPress","handleMouseClick","representGameboard","e","target","matches","innerHTML","tileArray","querySelectorAll","i","length","j","tile","setAttribute","toString","key","getElementById","hidden","console","log","keyCode","rowSlide","rowMerge","newTile","reverse","columnSlide","columnMergeUp","columnMergeDown","slide","arr","zeroes","slid","returnArr","push","grid","dir","tempColumn","k","parseInt","showAlert","text","duration","alertContainer","alert","createElement","textContent","classList","add","prepend","setTimeout","remove","empties","randomEmptyCoord","Math","floor","random"],"sources":["/Users/sen/Documents/GitHub/98-in-react/src/assets/2048/script.js"],"sourcesContent":["var board = \r\n  [ [0,2,0,0],\r\n  [0,0,0,0],\r\n  [0,0,2,0],\r\n  [0,0,0,0] ]\r\nconst boardState = document.querySelector(\"[data-game-grid]\")\r\nvar hasLost = false;\r\nfunction startInteraction(){\r\n  document.addEventListener(\"keydown\", handleKeyPress);\r\n  document.addEventListener(\"click\", handleMouseClick);\r\n}\r\nstartInteraction();\r\nrepresentGameboard(board);\r\nfunction handleMouseClick(e) {\r\n  if  (e.target.matches(\"[data-new-game]\")){\r\n    board = [ [0,2,0,0],\r\n              [0,0,0,0],\r\n              [0,0,2,0],\r\n              [0,0,0,0] ]\r\n    representGameboard(board);\r\n    document.querySelector(\"[data-score]\").innerHTML = \"0\"\r\n  }\r\n}\r\n\r\nfunction representGameboard(board){\r\n  const tileArray = boardState.querySelectorAll(\".tile\")\r\n  for(let i = 0; i < board.length; i ++){\r\n    for(j = 0; j < board.length; j++){\r\n      const tile = tileArray[i * 4 + j];\r\n      tile.innerHTML = board[i][j];\r\n      tile.setAttribute(\"data-state\", board[i][j].toString())\r\n    }\r\n  }\r\n}\r\n\r\nfunction handleKeyPress(e){\r\n  if (e.key == \"q\"){\r\n    document.getElementById(\"comment\").hidden = !document.getElementById(\"comment\").hidden;\r\n  }\r\n  if (e.key == \"e\"){\r\n    console.log(board)\r\n  }\r\n  if (e.keyCode == '37'){\r\n    //left\r\n    rowSlide(board)\r\n    // integrate this for loop into rowMerge\r\n    for(let i = 0; i < board.length; i++){\r\n      board[i] = rowMerge(board[i])\r\n    }\r\n    rowSlide(board)\r\n    newTile(board)\r\n    representGameboard(board)\r\n  }\r\n  if (e.keyCode == '39'){\r\n    //right\r\n    rowSlide(board, \"r\")\r\n    // integrate this for loop into rowMerge\r\n    for(let i = 0; i < board.length; i++){\r\n      board[i] = rowMerge(board[i].reverse()).reverse()\r\n    }\r\n    rowSlide(board, \"r\")\r\n    newTile(board)\r\n    representGameboard(board)\r\n  }\r\n  if (e.keyCode == '38'){\r\n    //up\r\n    columnSlide(board)\r\n    columnMergeUp(board)\r\n    columnSlide(board)\r\n    newTile(board)\r\n    representGameboard(board)\r\n  }\r\n  if (e.keyCode == '40'){\r\n    //down\r\n    columnSlide(board, \"d\")\r\n    columnMergeDown(board)\r\n    columnSlide(board, \"d\")\r\n    newTile(board)\r\n    representGameboard(board)\r\n  }\r\n  if (e.key == \"r\"){\r\n    newTile(board)\r\n  }\r\n}\r\nfunction slide(arr){\r\n  var zeroes = 0\r\n  const slid = [];\r\n  var returnArr = [0,0,0,0];\r\n  for(let i = 0; i < arr.length; i++){\r\n    if (arr[i] === 0){\r\n      zeroes += 1;\r\n    }\r\n    slid.push(zeroes)\r\n  }\r\n  for(let j = 0; j < arr.length; j++){\r\n    if(arr[j] !== 0){\r\n      returnArr[j - slid[j]] = arr[j];\r\n    }\r\n  }\r\n  return(returnArr)\r\n}\r\n\r\nfunction rowSlide(grid, dir = \"l\"){\r\n  for (let i = 0; i < grid.length; i++){\r\n    if (dir == \"r\"){\r\n      grid[i] = slide(grid[i].reverse()).reverse();\r\n    } else {\r\n    grid[i] = slide(grid[i]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction columnSlide(grid, dir = \"u\"){\r\n  var tempColumn = [0,0,0,0]\r\n  for(let i = 0; i < grid.length; i++){\r\n    for(let j = 0; j < grid[i].length; j++){\r\n      tempColumn[j] = grid[j][i]\r\n    }\r\n    if (dir == \"d\"){\r\n      tempColumn = slide(tempColumn.reverse()).reverse()\r\n    } else {\r\n    tempColumn = slide(tempColumn)\r\n    }\r\n    for(let k = 0; k < grid[i].length; k ++){\r\n      grid[k][i] = tempColumn[k]\r\n    }\r\n    tempColumn = [0,0,0,0]\r\n  }\r\n}\r\n\r\nfunction rowMerge(arr){\r\n  for(let i = 0; i < arr.length-1; i++){\r\n    if(arr[i] == arr[i+1] && !arr[i] == 0){\r\n      arr[i] = arr[i]*2\r\n      arr[i+1] = 0\r\n      document.querySelector(\"[data-score]\").innerHTML = (parseInt(document.querySelector(\"[data-score]\").innerHTML) + arr[i]*4).toString()\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction columnMergeUp(grid){\r\n  for(let j = 0; j < grid[0].length; j++){\r\n    for(let i = 0; i < grid.length-1; i ++){\r\n      if(grid[i][j] == grid[i+1][j] && !grid[i][j] == 0){\r\n        grid[i][j] = grid[i][j]*2\r\n        grid[i+1][j] = 0\r\n        document.querySelector(\"[data-score]\").innerHTML = (parseInt(document.querySelector(\"[data-score]\").innerHTML) + grid[i][j]*4).toString()\r\n      }\r\n    }\r\n  }\r\n  return grid\r\n}\r\n\r\nfunction columnMergeDown(grid){\r\n  for(let j = 0; j < grid[0].length; j++){\r\n    for(let i = grid.length-1; i > 0; i --){\r\n      if(grid[i][j] == grid[i-1][j] && !grid[i][j] == 0){\r\n        grid[i][j] = grid[i][j]*2\r\n        grid[i-1][j] = 0\r\n        document.querySelector(\"[data-score]\").innerHTML = (parseInt(document.querySelector(\"[data-score]\").innerHTML) + grid[i][j]*4).toString()\r\n      }\r\n    }\r\n  }\r\n  return grid\r\n}\r\n\r\nfunction showAlert(text, duration = 1000){\r\n  const alertContainer = document.querySelector(\"[data-alert-container]\");\r\n  const alert = document.createElement(\"div\");\r\n  alert.textContent = text;\r\n  alert.classList.add(\"alert\");\r\n  alertContainer.prepend(alert);\r\n  if (duration == null) return\r\n  setTimeout(()=>{\r\n    alert.classList.add(\"hide\")\r\n    alert.addEventListener(\"transitionend\", () =>{\r\n      alert.remove();\r\n    })\r\n  }, duration)\r\n}\r\n\r\nfunction newTile(grid){\r\n  const empties = []\r\n  for(var i = 0; i < grid.length; i ++){\r\n    for(var j = 0; j < grid[i].length; j++){\r\n      if (grid[i][j] == 0){\r\n        empties.push([i,j]);\r\n      }\r\n    }\r\n  }\r\n  console.log(empties)\r\n  if (empties.length != 0){\r\n    const randomEmptyCoord = empties[Math.floor(Math.random()*empties.length)]\r\n    grid[randomEmptyCoord[0]][randomEmptyCoord[1]] = Math.floor(Math.random()*2 + 1) * 2\r\n    \r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}